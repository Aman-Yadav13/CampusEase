// import { useEffect } from "react";
// import styled from "styled-components";
// import { useParams } from "react-router-dom";
// import { useProductContext } from "./context/productcontex";

// const API = "https://api.pujakaitem.com/api/products";

// const SingleProduct = () => {
//   return <h1>single page </h1>;
//   const { getSingleProduct, isSingleLoading, singleProduct } =
//     useProductContext();

//   const { id } = useParams();

//   const {
//     id: alias,
//     name,
//     company,
//     price,
//     description,
//     category,
//     stock,
//     stars,
//     reviews,
//   } = singleProduct;

//   useEffect(() => {
//     getSingleProduct(`${API}?id=${id}`);
//   }, []);

//   return <h1>single page {name} </h1>;
// };

// const Wrapper = styled.section`
//   19 changes: 18 additions & 1 deletion19
// src/context/productcontex.js
// @@ -11,6 +11,8 @@ const initialState = {
//   isError: false,
//   products: [],
//   featureProducts: [],
//   isSingleLoading: false,
//   singleProduct: {},
// };

// const AppProvider = ({ children }) => {
// @@ -27,12 +29,27 @@ const AppProvider = ({ children }) => {
//     }
//   };

//   // my 2nd api call for single product

//   const getSingleProduct = async (url) => {
//     dispatch({ type: "SET_SINGLE_LOADING" });
//     try {
//       const res = await axios.get(url);
//       const singleProduct = await res.data;
//       dispatch({ type: "SET_SINGLE_PRODUCT", payload: singleProduct });
//     } catch (error) {
//       dispatch({ type: "SET_SINGLE_ERROR" });
//     }
//   };

//   useEffect(() => {
//     getProducts(API);
//   }, []);

//   return (
//     <AppContext.Provider value={{ ...state }}>{children}</AppContext.Provider>
//     <AppContext.Provider value={{ ...state, getSingleProduct }}>
//       {children}
//     </AppContext.Provider>
//   );
// };

//   20 changes: 20 additions & 0 deletions20
// src/reducer/productReducer.js
// @@ -40,6 +40,26 @@ const ProductReducer = (state, action) => {
//         isError: true,
//       };

//     case "SET_SINGLE_LOADING":
//       return {
//         ...state,
//         isSingleLoading: true,
//       };

//     case "SET_SINGLE_PRODUCT":
//       return {
//         ...state,
//         isSingleLoading: false,
//         singleProduct: action.payload,
//       };

//     case "SET_SINGLE_ERROR":
//       return {
//         ...state,
//         isSingleLoading: false,
//         isError: true,
//       };

//     default:
//       return state;
//   }
